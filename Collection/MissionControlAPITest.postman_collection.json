{
	"info": {
		"_postman_id": "6ccc476e-cf74-4b82-a7b5-23fb2eabebe2",
		"name": "MissionControlAPITest",
		"description": "Test API of Mission Control app",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Tenants",
			"item": [
				{
					"name": "GetAllTenants",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "62166653-166a-431b-a021-85afb173f320",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Test the response should contain service code field\",function()",
									"{",
									"   pm.expect(jsonData).to.have.property('serviceCode');",
									"});",
									"",
									"pm.test(\"Test the response should contain service message field\",function()",
									"{",
									"   pm.expect(jsonData).to.have.property('serviceMessage');",
									"});",
									"",
									"pm.test(\"Test a returned tenant should contain all needed fields\",function()",
									"{",
									"    ",
									"",
									"    //If data note is not empty, Verify all fields of a tenant are displayed correctly",
									"    if(jsonData.content.data.length !== \"0\")",
									"    {",
									"        pm.expect(jsonData.content.data[0]).to.have.property('id');",
									"        pm.expect(jsonData.content.data[0]).to.have.property('createdDatetime');",
									"        pm.expect(jsonData.content.data[0]).to.have.property('host');",
									"        pm.expect(jsonData.content.data[0]).to.have.property('ingestions');",
									"        pm.expect(jsonData.content.data[0]).to.have.property('active');",
									"        pm.expect(jsonData.content.data[0]).to.have.property('name');",
									"        pm.expect(jsonData.content.data[0]).to.have.property('updatedDatetime');",
									"        pm.expect(jsonData.content.data[0]).to.have.property('tenantTimezone');",
									"    }",
									"    else",
									"    {",
									"        console.log(\"No returned tenants\");",
									"    }",
									"});",
									"",
									"pm.test(\"Test a returned host of a tenant should contain all needed host fields\",function()",
									"{",
									"    var tenantLength = jsonData.content.data.length;",
									"    if(tenantLength !== 0)",
									"    {",
									"        for(var index = 0 ; index ++ ; index < tenantLength)",
									"        {",
									"            if(jsonData.content.data[index].ingestions.length !== \"0\")",
									"            {",
									"                //Check ingestions note contains all needed fields",
									"                pm.expect(jsonData.content.data[index].ingestions).to.have.property('id');",
									"                pm.expect(jsonData.content.data[index].ingestions).to.have.property('ingestionType');",
									"                pm.expect(jsonData.content.data[index].ingestions).to.have.property('ingestionHost');",
									"                pm.expect(jsonData.content.data[index].ingestions).to.have.property('username');",
									"                pm.expect(jsonData.content.data[index].ingestions).to.have.property('password');",
									"                pm.expect(jsonData.content.data[index].ingestions).to.have.property('active');",
									"                pm.expect(jsonData.content.data[index].ingestions).to.have.property('createdDate');",
									"                pm.expect(jsonData.content.data[index].ingestions).to.have.property('updatedDate');",
									"                break;",
									"            }",
									"        }",
									"        ",
									"    }",
									"    else",
									"    {",
									"        console.log(\"No returned tenants\");",
									"    }",
									"})",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "02430222-70c1-4c32-839d-823a75c59ee1",
								"exec": [
									"const signInPostRequest = {\r",
									"  url: pm.environment.get('MissionControlGateway') + '/api/v1/accounts/signin',\r",
									"  method: 'POST',\r",
									"  header: 'Content-Type:application/json',\r",
									"  body: {\r",
									"    mode: 'application/json',\r",
									"    raw: JSON.stringify(\r",
									"        {\r",
									"        \tclientId: pm.environment.get('your_client_id'),\r",
									"        \tclient_secret: pm.environment.get('your client secret'),\r",
									"        \taudience: pm.environment.get('my_audience'),\r",
									"        \tgrant_type:'client_credentials'\r",
									"        })\r",
									"  }\r",
									"};"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{authorization}}",
								"type": "text"
							},
							{
								"key": "apikey",
								"value": "{{apiKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{missionControlGateway}}/api/v2.0/tenants/search?page=0&size=25",
							"host": [
								"{{missionControlGateway}}"
							],
							"path": [
								"api",
								"v2.0",
								"tenants",
								"search"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "25"
								}
							]
						},
						"description": "Get all tenants"
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "056ead23-2f7c-473a-a903-2c2aeec9fb86",
				"type": "text/javascript",
				"exec": [
					"const signInPostRequest = {",
					"  url: pm.environment.get('missionControlGateway') + '/api/v1/accounts/signin',",
					"  method: 'POST',",
					"  header: ",
					"  {",
					"      'Content-Type':'application/json',",
					"      'ApiKey':pm.environment.get('apiKey')",
					"  },",
					"  body: {",
					"    mode: 'application/json',",
					"    raw: JSON.stringify(",
					"        {",
					"        \tclientId: pm.environment.get('apiKey'),",
					"        \temail: pm.environment.get('email'),",
					"        \tgrantType:'resource_owner',",
					"        \tpassword: pm.environment.get('password'),",
					"        \tscope:'Mission Control'",
					"        \t",
					"        })",
					"  }",
					"};",
					"",
					"pm.sendRequest(signInPostRequest, function (err, res) {",
					"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().body.accessToken);",
					"});"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "81fd9d5c-9506-4d66-b0f0-c9e3b2738ff8",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}